#!/usr/bin/env bash

prog=$(basename $0)

warn() { [ $# -gt 0 ] && echo $prog: "$@" 1>&2; }
abort() { warn "$@"; exit 1; }

usage() {
  warn "$@"
  cat <<EOT
USAGE: $prog [OPTIONS...] [-- DOCKEROPTIONS...]

  Starts the cfn-tools docker container.

OPTIONS:
  -c, --command=<command>     Execute <command> in the shell and exit.
  -h, --help                  Print this and exit.
  -p, --profile=<profile>     Configure the AWS credentials profile.
  -r, --region=<region>       Configure AWS region.
EOT
  exit;
}

opts=$(getopt -o c:p:r:h --long command:,profile:,region:,help -n parse-options -- "$@")
if [ $? != 0 ]; then abort; fi
eval set -- "$opts"

with_terminal=-t
CFN_TOOLS_AWS_PROFILE=

while true; do
  case "$1" in
    -c|--command) CFN_TOOLS_CMD=$2 ; with_terminal= ; shift 2 ;;
    -p|--profile) CFN_TOOLS_AWS_PROFILE=$2 ; shift 2 ;;
    -r|--region)  export AWS_REGION=$2 AWS_DEFAULT_REGION=$2 ; shift 2 ;;
    -h|--help)    usage ;;
    --)           shift; break ;;
    *)            break ;;
  esac
done

if [ `uname` = "Darwin" ]; then
    CFN_TOOLS_USER_UID=1000
    CFN_TOOLS_USER_GID=50
else
    CFN_TOOLS_USER_UID=$(id -u)
    CFN_TOOLS_USER_GID=$(id -g)
fi

org=showmethemodel
project=cfn-tools
tag=$org/$project
version=latest

CFN_TOOLS_BASE_DIR=$PWD

local_home=$CFN_TOOLS_BASE_DIR/.cfn-tools/dockerhome
global_home=$HOME/.cfn-tools/dockerhome
local_config=$CFN_TOOLS_BASE_DIR/.cfn-tools/config
global_config=$HOME/.cfn-tools/config

# migration
if [ -f .cfn-tools ]; then
  echo "Migrating: .cfn-tools -> .cfn-tools/config"
  tmp=$(mktemp)
  mv .cfn-tools $tmp
  mkdir .cfn-tools
  mv $tmp .cfn-tools/config
fi

dockerhome=$local_home
[ -d "$dockerhome" ] || dockerhome=$global_home

CFN_TOOLS_CONFIG=$local_config
[ -f "$CFN_TOOLS_CONFIG" ] || CFN_TOOLS_CONFIG=$global_config

[ -f "$CFN_TOOLS_CONFIG" ] && . "$CFN_TOOLS_CONFIG"

if [ -n "$AWS_REGION" -a -z "$AWS_DEFAULT_REGION" ]; then
  export AWS_DEFAULT_REGION=$AWS_REGION
elif [ -n "$AWS_DEFAULT_REGION" -a -z "$AWS_REGION" ]; then
  export AWS_REGION=$AWS_DEFAULT_REGION
fi

export CFN_TOOLS_USER_UID CFN_TOOLS_USER_GID CFN_TOOLS_BASE_DIR CFN_TOOLS_AWS_PROFILE \
  CFN_TOOLS_CMD CFN_TOOLS_BUCKET

if [ ! -d "$global_home" ]; then
  echo Creating docker home dir: "$global_home"
  mkdir -p "$global_home"
fi

if [ ! -f $dockerhome/.bashrc ]; then
  echo Creating bash config: "$dockerhome/.bashrc"
  cat <<'EOT' > $dockerhome/.bashrc
# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
  . /etc/bashrc
fi

# User specific aliases and functions
EOT
fi

if [ ! -f "$dockerhome/.parallel/will-cite" ]; then
  mkdir -p "$dockerhome/.parallel"
  touch "$dockerhome/.parallel/will-cite"
fi

docker run -i $with_terminal --rm --net=host \
  --name "$project.$USER.$(basename "$(pwd)" |grep -o '^[a-zA-Z0-9][a-zA-Z0-9_.-]*')" \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v "$dockerhome:$HOME" \
  -v "$CFN_TOOLS_BASE_DIR:$CFN_TOOLS_BASE_DIR" \
  -v $(dirname $SSH_AUTH_SOCK):$(dirname $SSH_AUTH_SOCK) \
  -e CFN_TOOLS_USER_HOME=$HOME \
  -e CFN_TOOLS_USER_NAME=$USER \
  -e CFN_TOOLS_USER_UID \
  -e CFN_TOOLS_USER_GID \
  -e CFN_TOOLS_AWS_PROFILE \
  -e CFN_TOOLS_BASE_DIR \
  -e CFN_TOOLS_CMD \
  -e SSH_AUTH_SOCK \
  -e AWS_ACCESS_KEY_ID \
  -e AWS_SECRET_ACCESS_KEY \
  -e AWS_REGION \
  -e AWS_DEFAULT_REGION \
  "$@" \
  $tag:$version /usr/bin/startup.sh
