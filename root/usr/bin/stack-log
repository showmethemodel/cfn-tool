#!/usr/bin/env bash

set -e -o pipefail

mydir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
. "$mydir/.fns"

tpl_tmpfile=$(mktemp)

trap "rm -f $tpl_tmpfile" EXIT

usage() {
  warn "$@"
  cat <<EOT
USAGE:
  $(basename $0) <stackname> [<timestamp>]
  $(basename $0) -h

OVERVIEW:
  Get the event log for the CloudFormation stack with name <stackname> and
  print it to stdout. If a <timestamp> is provided the result will contain
  only messages with timestamps not before <timestamp>.

  Example timestamp: 2020-07-16T18:51:03.000Z

OPTIONS:
  -h              Print this and exit.
EOT
  exit;
}

while getopts "h" o; do
  case "${o}" in
    h) usage ;;
    ?) abort ;;
  esac
done
shift $((OPTIND-1))

stack_name=$1 ; shift || true
as_of=$1      ; shift || true

logs=$(
  aws cloudformation describe-stack-events \
    --stack-name $stack_name \
    |jt . \
      [ Timestamp %=Timestamp ] \
      [ ResourceType %=ResourceType ] \
      [ LogicalResourceId %=LogicalResourceId ] \
      [ PhysicalResourceId %=PhysicalResourceId ] \
      [ ResourceStatus %=ResourceStatus ] \
      [ ResourceStatusReason %=ResourceStatusReason ] \
    |sed 's@\t[^\t][^\t]*:@\t@g' \
    |sed 's@\t[^\t]*/@\t@g' \
    |column -s '	' -t
)

if [ -n $as_of ]; then
  logs=$(echo "$logs" \
    |awk -F\\t "$(printf '$1 >= "%s" || $1 == "Timestamp" {print}' $as_of)")
fi

echo "$logs"
