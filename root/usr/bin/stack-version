#!/usr/bin/env bash

set -e -o pipefail

mydir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
. "$mydir/.fns"

tpl_tmpfile=$(mktemp)

trap "rm -f $tpl_tmpfile" EXIT

usage() {
  warn "$@"
  cat <<EOT
USAGE:
  $(basename $0) [-h] [<stackname>]
  $(basename $0) -l <stackname>

OVERVIEW:
  Get the git SHA deployed to stack with name <stackname>. If called with no
  arguments the current SHA is computed. The SHA is written to stdout in the
  following format:

    \${BRANCH}@\${SHA}\${DIRTY}

  where BRANCH and SHA are the branch and SHA of the git commit that was de-
  ployed and DIRTY is a plus (+) if the repo was dirty, or nothing otherwise.

  When the -l option is specified the deployment log is printed. This log is
  derived from commits that have been tagged by the stack-deploy program.

OPTIONS:
  -h              Print this and exit.
  -l              Show a log of past deployments.
EOT
  exit;
}

logmode=false

while getopts "hl" o; do
  case "${o}" in
    h) usage ;;
    l) logmode=true ;;
    ?) abort ;;
  esac
done
shift $((OPTIND-1))

stack_name=$1 ; shift || true

if $logmode; then
  [ -n "$stack_name" ] || abort "stack name required"
  git tag \
    |grep "^${stack_name}/" \
    |sort -t/ -k3,3r \
    |xargs -n1 -I{} git log --no-walk -1 --pretty='{}	%h	%s' {} \
    |sed 's@^\([^/]\+\)/\([^/]\+\)/\([^\t]\+\)@\1\t\2\t\3@' \
    |column -s'	' -t
elif [ -z "$stack_name" ]; then
  git_id
else
  aws cloudformation describe-stacks --stack-name $stack_name \
    |jt Stacks Parameters [ ParameterKey % ] [ ParameterValue % ] \
    |awk -F\\t '$1 == "Version" {print $2}'
fi
