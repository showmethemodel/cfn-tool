#!/usr/bin/env bash

set -e -o pipefail

mydir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
. "$mydir/.fns"

tpl_tmpfile=$(mktemp)
trap "rm -f $tpl_tmpfile" EXIT

usage() {
  warn "$@"
  cat <<EOT
USAGE:
  $(basename $0) [-h] <stackname>

OVERVIEW:
  Create a cloudformation change set for <stackname>, where <stackname> is of
  the following format:

    <team>-<zone>-<template>

  The <zone> must correspond to a configuration file named config/<zone>.sh,
  and the <template> to a file named infra/<team>/<template>.yml.

  Note: The <zone> and <team> names may not contain any dash (-) characters.

OPTIONS:
  -h              Print this and exit.
EOT
  exit;
}

while getopts "h" o; do
  case "${o}" in
    h) usage ;;
    ?) abort ;;
  esac
done
shift $((OPTIND-1))

stack_name=$1; shift
[ -n "$stack_name" ] || abort "stack name required"

Team=$(echo "$stack_name" |cut -d- -f1)
Zone=$(echo "$stack_name" |cut -d- -f2)

config=config/${Zone}.sh
[ -f $config ] || abort "file not found: $config"

template=infra/$Team/$(echo "$stack_name" |cut -d- -f3-).yml
[ -f $template ] || abort "file not found: $template"

info "Packaging..."

make -sC src/template-preprocess

aws cloudformation package \
  --template-file $template \
  --s3-bucket $bucket \
  --s3-prefix $Zone \
  --output-template-file $tpl_tmpfile \
  |grep . \
  || abort

info "Validating..."

. $config || abort "can't source config file"

info=$(aws cloudformation validate-template --template-body "$(cat $tpl_tmpfile)") || abort
caps=$(echo "$info" | jt Capabilities % )
keys=$(echo "$info" |jt Parameters ParameterKey %)
params="ParameterKey=Version,ParameterValue=$(git_id)"

for key in $keys; do
  [ -z "${!key}" ] || params="$params ParameterKey=${key},ParameterValue=\"${!key}\""
done

info "Creating change set..."

change_set_name=${stack_name}-$(git rev-parse --short HEAD)-$(date -u +%Y-%m-%d-%H%M%S)

change_set_id=$(aws cloudformation create-change-set \
  --stack-name $stack_name \
  --change-set-name $change_set_name \
  --template-body "$(cat $tpl_tmpfile)" \
  ${caps:+--capabilities $caps} \
  ${params:+--parameters $params} \
  --tags Key=Team,Value=$Team Key=BillingGroup,Value=$Team Key=Zone,Value=$Zone \
  | jt Id %) || abort

info "Waiting for change set to be created..."

while true; do
  change_set=$(aws cloudformation describe-change-set --change-set-name $change_set_id) || abort
  status=$(echo "$change_set" |jt Status %)
  [ "$status" = CREATE_IN_PROGRESS ] || break
  sleep 1
done

echo "$change_set" |less

success DONE
