# encoding: utf-8
stack-deploy(1) -- deploy cloudformation stacks
===============================================

## SYNOPSIS

`stack-deploy` [<OPTIONS>...] <stackname>

## DESCRIPTION

Deploys cloudformation stack <stackname>, where <stackname> is of the format
<zone>-<template>. The <zone> must correspond to a configuration file named
config/<zone>.yml and the <template> must correspond to a cloudformation
template named infra/<template>.yml.

## OPTIONS

  * `-c`, `--create`:
    Create new stack (default is to update an existing stack).

  * `-h`, `--help`:
    Print usage info and exit.

  * `-l`, `--linter`=<linter>:
    Run <linter> on each processed template and display the results. The
    <linter> should be a program that expects one argument--the template
    file path.

  * `-n`, `--dryrun`:
    Package and lint templates but do not upload to S3 nor deploy.

  * `-t`, `--template`=<template>:
    Deploy <template> instead of using zone and infra convention.

  * `-v`, `--verbose`:
    Print extra diagnostic output while deploying.

  * `-y`, `--yes`:
    Don't wait for change set confirmation before deploying.

## ENVIRONMENT VARIABLES

The following environment variables may be used in lieu of profiles for the
AWS credentials provider chain.

  * `AWS_DEFAULT_REGION`:
    The AWS region.

  * `AWS_ACCESS_KEY_ID`:
    The AWS access key identifier (ie. 'AKIAXXXXXXXXXXXXXXXX').

  * `AWS_SECRET_ACCESS_KEY`:
    The AWS secret key.

## EXIT STATUS

Exits with a status of 1 if an error occurred, or 0 otherwise.
